# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'atom-text-editor:not([mini])':
  'ctrl-d': 'editor:delete-line'
  'ctrl-shift-K': null

'atom-text-editor':
  'ctrl-u': 'editor:delete-to-beginning-of-line'
  'ctrl-k': 'editor:delete-to-end-of-line'
  'ctrl-w': 'editor:delete-to-beginning-of-word'
  'shift-cmd-backspace': null
  'alt-backspace': null
  'cmd-backspace': null
  'cmd-delete': null
  'alt-h': null

'atom-workspace atom-text-editor:not([mini])':
  'ctrl-shift-d': 'editor:duplicate-lines'
  'ctrl-}': 'editor:toggle-line-comments'
  'ctrl-shift-}': 'editor:toggle-block-comments' # not such a feature :(
  'shift-cmd-D': null
  'cmd-/': null

'body':
  'ctrl-shift-up': 'pane:split-up'
  'ctrl-shift-down': 'pane:split-down'
  'ctrl-shift-left': 'pane:split-left'
  'ctrl-shift-right': 'pane:split-right'
  'ctrl-up': 'window:focus-pane-above'
  'ctrl-down': 'window:focus-pane-below'
  'ctrl-left': 'window:focus-pane-on-left'
  'ctrl-right': 'window:focus-pane-on-right'
